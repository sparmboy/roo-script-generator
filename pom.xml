<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.sarm.utils</groupId>
	<artifactId>roo-script-generator</artifactId>
	<version>1.0.0</version>
	<packaging>jar</packaging>

	<name>roo-script-generator</name>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<spring.roo.version>1.2.5.RELEASE</spring.roo.version>
	</properties>

	<profiles>
		<profile>
			<id>dev</id>
			<properties>
				<!-- This is the schema name for the generated code we want to test -->
				<testSchema>test</testSchema>
			</properties>
		</profile>
		<profile>
			<id>integration-test</id>
			<properties>
				<!-- Used to locate the profile specific configuration file. -->
				<build.profile.id>integration-test</build.profile.id>
				<!-- When we run integration tests, we want to run the unit tests first 
					so that the scripts are generated -->
				<skip.integration.tests>false</skip.integration.tests>
				<skip.unit.tests>false</skip.unit.tests>

				<!-- This is the schema name for the generated code we want to test -->
				<testSchema>test</testSchema>
			</properties>
		</profile>
	</profiles>

	<dependencies>

		<dependency>
			<groupId>maven</groupId>
			<artifactId>dom4j</artifactId>
			<version>1.7-20060614</version>
			<type>jar</type>
			<scope>compile</scope>
		</dependency>

		<dependency>
			<groupId>org.springframework.roo</groupId>
			<artifactId>org.springframework.roo.model</artifactId>
			<version>${spring.roo.version}</version>
		</dependency>

		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>1.7.7</version>
		</dependency>

		<dependency>
			<groupId>commons-logging</groupId>
			<artifactId>commons-logging</artifactId>
			<version>1.1.3</version>
		</dependency>

		<dependency>
			<groupId>commons-cli</groupId>
			<artifactId>commons-cli</artifactId>
			<version>1.2</version>
		</dependency>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.11</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-jcl</artifactId>
			<version>1.7.7</version>
		</dependency>
		<dependency>
			<groupId>junit-addons</groupId>
			<artifactId>junit-addons</artifactId>
			<version>1.4</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.apache.httpcomponents</groupId>
			<artifactId>httpclient</artifactId>
			<version>4.3-alpha1</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>httpcomponents-httpcore</groupId>
			<artifactId>httpcore</artifactId>
			<version>4.0-alpha6</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>com.google.code.gson</groupId>
			<artifactId>gson</artifactId>
			<version>2.2.2</version>
			<scope>test</scope>
		</dependency>


	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>build-helper-maven-plugin</artifactId>
				<version>1.7</version>
				<executions>
					<!-- States that the plugin's add-test-source goal is executed at generate-test-sources 
						phase. -->
					<execution>
						<id>add-integration-test-sources</id>
						<phase>generate-test-sources</phase>
						<goals>
							<goal>add-test-source</goal>
						</goals>
						<configuration>
							<!-- Configures the source directory of integration tests. -->
							<sources>
								<source>src/integration-test/java</source>
							</sources>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>2.12</version>
				<configuration>
					<!-- Skips unit tests if the value of skip.unit.tests property is true -->
					<skipTests>${skip.unit.tests}</skipTests>
					<!-- Excludes integration tests when unit tests are run. ÃŸ -->
					<excludes>
						<exclude>**/*IntegrationTest.java</exclude>
					</excludes>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>exec-maven-plugin</artifactId>
				<version>1.2</version>
				<executions>
					<execution>
						<id>generate webapp with roo</id>
						<phase>pre-integration-test</phase>
						<goals>
							<goal>exec</goal>
						</goals>
						<configuration>
							<workingDirectory>target</workingDirectory>
							<executable>roo</executable>
							<arguments>
								<argument>script</argument>
								<argument>--file</argument>
								<argument>${testSchema}.roo</argument>
							</arguments>
						</configuration>
					</execution>
					
<!-- 					<execution>
						<id>build and start webapp</id>
						<phase>pre-integration-test</phase>
						<goals>
							<goal>exec</goal>
						</goals>
						<configuration>
							<workingDirectory>target</workingDirectory>
							<executable>mvn</executable>
							<arguments>
								<argument>org.apache.tomcat.maven:tomcat7-maven-plugin:2.2:run-war</argument>
								<argument>-Dmaven.tomcat.port=8077</argument>
								<argument>-Dmaven.tomcat.fork=false</argument>
							</arguments>
						</configuration>
					</execution>

					<execution>
						<id>shutdown webapp</id>
						<phase>post-integration-test</phase>
						<goals>
							<goal>exec</goal>
						</goals>
						<configuration>
							<workingDirectory>target</workingDirectory>
							<executable>mvn</executable>
							<arguments>
								<argument>org.apache.tomcat.maven:tomcat7-maven-plugin:2.2:shutdown</argument>
								<argument>-Dmaven.tomcat.port=8077</argument>
								<argument>-Dmaven.tomcat.fork=true</argument>
							</arguments>
						</configuration>
					</execution>
 -->

				</executions>
			</plugin>



			<!-- startup and shutdown a tomcat instance of the app for integration 
				tests -->
			<!-- <plugin> <groupId>org.apache.tomcat.maven</groupId> <artifactId>tomcat7-maven-plugin</artifactId> 
				<version>2.1</version> <configuration> <fork>true</fork> <port>8077</port> 
				</configuration> <executions> <execution> <id>start-app</id> <phase>pre-integration-test</phase> 
				<goals> <goal>run-war</goal> </goals> </execution> <execution> <id>stop-app</id> 
				<phase>post-integration-test</phase> <goals> <goal>shutdown</goal> </goals> 
				</execution> </executions> </plugin> -->

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-failsafe-plugin</artifactId>
				<version>2.12</version>
				<executions>

					<!-- States that both integration-test and verify goals of the Failsafe 
						Maven plugin are executed. -->
					<execution>
						<id>integration-tests</id>
						<goals>
							<goal>integration-test</goal>
							<goal>verify</goal>
						</goals>
						<configuration>
							<!-- Skips integration tests if the value of skip.integration.tests 
								property is true -->
							<skipTests>${skip.integration.tests}</skipTests>
							<includes>
								<include>**/IntegrationTest*.java</include>
							</includes>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<configuration>
					<archive>
						<manifest>
							<mainClass>com.sarm.utils.spring.roo.RooScriptGenerator</mainClass>
							<addClasspath>true</addClasspath>
							<classpathPrefix>lib/</classpathPrefix>
						</manifest>
					</archive>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<executions>
					<execution>
						<id>copy-dependencies</id>
						<phase>prepare-package</phase>
						<goals>
							<goal>copy-dependencies</goal>
						</goals>
						<configuration>
							<outputDirectory>${project.build.directory}/lib</outputDirectory>
							<overWriteReleases>false</overWriteReleases>
							<overWriteSnapshots>false</overWriteSnapshots>
							<overWriteIfNewer>true</overWriteIfNewer>
							<includeScope>compile</includeScope>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>

	<repositories>
		<repository>
			<id>spring-roo-repository</id>
			<name>Spring Roo Repository</name>
			<url>http://spring-roo-repository.springsource.org/release</url>
		</repository>
	</repositories>
	<pluginRepositories>
		<pluginRepository>
			<id>spring-roo-repository</id>
			<name>Spring Roo Repository</name>
			<url>http://spring-roo-repository.springsource.org/release</url>
		</pluginRepository>
	</pluginRepositories>
	
		<distributionManagement>
		<repository>
			<id>releases</id>
			<url>http://localhost:8083/nexus/content/repositories/releases</url>
		</repository>
		<snapshotRepository>
			<id>snapshots</id>
			<url>http://localhost:8083/nexus/content/repositories/snapshots</url>
		</snapshotRepository>
	</distributionManagement>
	
	<scm>
		<connection>scm:git:git@github.com:sparmboy/roo-script-generator.git</connection>
		<url>scm:git:git@github.com:sparmboy/roo-script-generator.git</url>
		<developerConnection>scm:git:git@github.com:sparmboy/roo-script-generator.git</developerConnection>
	  <tag>roo-script-generator-1.0.0</tag>
  </scm>
</project>
